const VERSION=6,log=(...e)=>{},PREFIX="/python-wasm-sw/";function delay(e){return new Promise((n=>setTimeout(n,e)))}async function handleSleep(e){const n=await e.request.json(),t=Math.round(n?.ms)??100;return await delay(t),new Response({status:304})}self.addEventListener("install",(e=>{})),self.addEventListener("activate",(e=>{}));const cache={sig:{},stdin:{},callOnStdin:{}};async function handleWriteSignal(e){const{sig:n,id:t}=await e.request.json();return cache.sig[t]=n,new Response(`${n}`,{status:200})}async function handleReadSignal(e){const{clear:n,id:t}=await e.request.json(),a=cache.sig[t]??0;return n&&(cache.sig[t]=0),new Response(`${a}`,{status:200})}async function handleWriteStdin(e){const{data:n,id:t}=await e.request.json();null==cache.stdin[t]?cache.stdin[t]=n:cache.stdin[t]+=n;const a=cache.callOnStdin[t];return null!=a&&(a(),cache.callOnStdin[t]=null),new Response(`${cache.stdin[t].length}`,{status:200})}async function waitForStdin(e,n=3e3){cache.stdin[e]||await new Promise(((t,a)=>{let s=!1,i=!1,c=0;cache.callOnStdin[e]=()=>{i||(clearTimeout(c),s=!0,t())},c=setTimeout((()=>{s||(cache.callOnStdin[e]=null,i=!0,a("timeout"))}),n)}))}async function handleReadStdin(e){const{id:n,ms:t}=await e.request.json();try{await waitForStdin(n,t??3e3)}catch(e){}const a=cache.stdin[n];return cache.stdin[n]="",new Response(a,{status:200})}self.addEventListener("fetch",(e=>{const{pathname:n}=new URL(e.request.url);if(!n.startsWith(PREFIX))return!1;switch(n.slice(PREFIX.length)){case"sleep":return void e.respondWith(handleSleep(e));case"write-stdin":return void e.respondWith(handleWriteStdin(e));case"read-stdin":return void e.respondWith(handleReadStdin(e));case"write-signal":return void e.respondWith(handleWriteSignal(e));case"read-signal":return void e.respondWith(handleReadSignal(e))}}));